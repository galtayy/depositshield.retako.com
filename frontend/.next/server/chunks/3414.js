exports.id=3414,exports.ids=[3414],exports.modules={7751:(e,t,a)=>{"use strict";a.a(e,async(e,o)=>{try{a.d(t,{E:()=>d,Z:()=>u});var r=a(9648),s=e([r]);r=(s.then?(await s)():s)[0];let i="https://api.depositshield.retako.com";console.log("\uD83C\uDF10 Environment:","PRODUCTION"),console.log("\uD83D\uDD0C API Base URL:",i);let n=r.default.create({baseURL:i,headers:{"Content-Type":"application/json"}});n.interceptors.request.use(e=>e,e=>Promise.reject(e)),n.interceptors.response.use(e=>e,e=>(e.response&&e.response.status,console.error("API Error:",e.response?e.response.data:e.message),Promise.reject(e)));let p=r.default.create({baseURL:i,headers:{"Content-Type":"application/json","X-Public-Access":"true"},timeout:8e3});p.interceptors.response.use(e=>e,e=>{if(console.error("Public API error:",e.message||e),!e.response){console.warn("Network error on public API, returning empty data");let t=e.config?.url||"";if(t.includes("/reports/uuid/")){let e=t.split("/").pop();return Promise.resolve({data:{id:e||"unknown",title:"Shared Report",description:"This report could not be loaded due to connection issues.",address:"Not available",type:"general",created_at:new Date().toISOString(),creator_name:"Not available",error:!0,dummy:!0}})}return Promise.resolve({data:e.config?.url.includes("photos")?[]:{}})}if(e.response){console.warn(`HTTP error ${e.response.status} on public API, returning default data`);let t=e.config?.url||"";if(t.includes("/reports/uuid/")){let a=t.split("/").pop();return Promise.resolve({data:{id:a||"unknown",title:"Shared Report (Error)",description:`This report could not be loaded. Error: ${e.response.status}`,address:"Not available",type:"general",created_at:new Date().toISOString(),creator_name:"Not available",error:!0,dummy:!0}})}return Promise.resolve({data:t.includes("photos")?[]:{}})}return Promise.reject(e)});let l=r.default.create({baseURL:i,headers:{"Content-Type":"application/json","X-Optional-Auth":"true"}});l.interceptors.request.use(e=>e,e=>Promise.reject(e)),l.interceptors.response.use(e=>e,e=>{if(e.response&&401===e.response.status){console.warn("Auth failed on publicTokenApi, proceeding as anonymous user");let t=e.config.url||"";return t.includes("photos")||t.includes("reports")?Promise.resolve({data:[]}):Promise.resolve({data:{}})}return Promise.reject(e)});let c=(e,t=i)=>{if(!e)return null;let a=e.path||e.url||"";if(!a)return null;if(a.startsWith("http"))return a;let o=a.startsWith("/")?a.substring(1):a;return`${t}/${o}`},d={getBaseUrl:()=>i,getPhotoUrl:e=>c(e,i),properties:{getAll:()=>n.get("/api/properties"),getById:e=>n.get(`/api/properties/${e}`),create:e=>n.post("/api/properties",e),update:(e,t)=>{if(console.log("Updating property data:",t),t._basic_property_update){console.log("BASIC PROPERTY UPDATE DETECTED - using special backend handling"),console.log("Flag value:",t._basic_property_update),console.log("Flag type:",typeof t._basic_property_update);let a={address:t.address,description:t.description,unit_number:t.unit_number,role_at_this_property:t.role_at_this_property||"renter",_basic_property_update:JSON.parse(JSON.stringify(!0))};return console.log("SENDING BASIC UPDATE PAYLOAD:",a),console.log("Flag type after JSON processing:",typeof a._basic_property_update),n.put(`/api/properties/${e}`,a)}if(t._partial_update){console.log("PARTIAL UPDATE DETECTED - Only sending specified fields");let a={};return(t._partial_fields||[]).forEach(e=>{void 0!==t[e]&&(a[e]=t[e])}),console.log("Partial update payload:",a),n.put(`/api/properties/${e}`,a)}let a={...t},o=e=>{if(!e)return null;try{if(/^\d{4}-\d{2}-\d{2}$/.test(e))return e;let t=new Date(e);if(isNaN(t.getTime()))return null;let a=t.getFullYear(),o=String(t.getMonth()+1).padStart(2,"0"),r=String(t.getDate()).padStart(2,"0");return`${a}-${o}-${r}`}catch(e){return console.error("Error formatting date:",e),null}};return a.contract_start_date&&(a.contract_start_date=o(a.contract_start_date)),a.contract_end_date&&(a.contract_end_date=o(a.contract_end_date)),a.move_in_date&&(a.move_in_date=o(a.move_in_date)),console.log("Sending formatted data to API:",a),n.put(`/api/properties/${e}`,a)},delete:e=>n.delete(`/api/properties/${e}`),saveLandlordDetails:(e,t)=>{console.log("*** LANDLORD VERISI KAYIT EDILIYOR ***"),console.log("ID:",e,"Data:",t);let a=null,o=null;return(void 0!==t.email?(a=t.email,o=t.phone):void 0!==t.landlord_email&&(a=t.landlord_email,o=t.landlord_phone),console.log("Veri \xe7ıkarıldı:",{email:a,phone:o}),a&&""!==a.trim()||o&&""!==o.trim())?n.post(`/api/properties/${e}/landlord`,{email:a?a.trim():null,phone:o?o.trim():null}):(console.error("Hata: Email ve telefon alanlarının ikisi de boş"),Promise.reject(Error("L\xfctfen en az bir iletişim bilgisi girin")))},saveRooms:(e,t)=>(console.log("API call - saveRooms with data:",{rooms:t}),n.post(`/api/properties/${e}/rooms`,{rooms:t})),getRooms:e=>(console.log("API call - getRooms for property:",e),n.get(`/api/properties/${e}/rooms`)),deleteRoom:(e,t)=>n.delete(`/api/properties/${e}/rooms/${t}`)},reports:{testMail:e=>(console.log("\uD83D\uDCE7 TEST EMAIL API CALL:",e),r.default.post(`${i}/api/reports/test-mail`,e,{headers:{"Content-Type":"application/json",Accept:"application/json"}})),archive:(e,t)=>(console.log(`📁 REPORT ARCHIVE API CALL: ID=${e}`),n.put(`/api/reports/${e}/archive`,t)),getAll:()=>n.get("/api/reports"),getByProperty:e=>n.get(`/api/reports/property/${e}`),getById:e=>n.get(`/api/reports/${e}`),getByUuid:e=>(console.log(`Getting report by UUID using ${i}`),r.default.get(`${i}/api/reports/uuid/${e}`,{headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(e=>(console.log("API response data:",e.data),e.data.approval_status&&("approved"===e.data.approval_status||"rejected"===e.data.approval_status)||(console.log("Setting approval_status to null (was:",e.data.approval_status,")"),e.data.approval_status=null),console.log("Final approval_status:",e.data.approval_status),e)).catch(t=>(console.warn("Error fetching report by UUID:",t.message||t),console.error("API Error details:",t.response?t.response.data:"No response data"),t.response&&t.response.data&&("ER_BAD_FIELD_ERROR"===t.response.data.code||t.response.data.message&&t.response.data.message.includes("Unknown column")))?(console.warn("Database schema error detected, trying alternative endpoint"),r.default.get(`${i}/api/reports/${e.replace(/[^a-zA-Z0-9-]/g,"")}`,{headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${localStorage.getItem("token")||""}`}}).catch(t=>(console.error("Alternative endpoint also failed:",t.message||t),{data:{id:e,title:"Report Not Available",description:"This report could not be loaded. There might be a database schema error.",address:"Data unavailable",type:"error",created_at:new Date().toISOString(),creator_name:"",tenant_name:"",tenant_email:"",is_archived:!1,approval_status:null,error:!0,rooms:[],property:{id:e,address:"Property information not available",property_type:"",description:""}}}))):{data:{id:e,title:"Report Unavailable",description:"Unable to load move-out report data. The server might be temporarily unavailable.",address:"Data unavailable",type:"error",created_at:new Date().toISOString(),creator_name:"",tenant_name:"",tenant_email:"",is_archived:!1,approval_status:null,error:!0,rooms:[],property:{id:e,address:"Property information not available",property_type:"",description:""}}})),create:e=>n.post("/api/reports",e),update:(e,t)=>n.put(`/api/reports/${e}`,t),delete:e=>n.delete(`/api/reports/${e}`),approve:(e,t)=>(console.log(`🔴 REPORT APPROVE API CALL: ID=${e}, UUID=${t.uuid||"N/A"}`),console.log("Approve payload:",t),t&&t.uuid)?r.default.put(`${i}/api/reports/${e}/public-approve`,{...t,isPublic:!0}).then(e=>(console.log("Approve API response:",e.data),e)).catch(e=>{throw console.error("Approve API Error:",{message:e.message,status:e.response?.status,data:e.response?.data}),e}):n.put(`/api/reports/${e}/approve`,t),reject:(e,t)=>(console.log(`🔴 REPORT REJECT API CALL: ID=${e}, UUID=${t.uuid||"N/A"}`),console.log("Reject payload:",t),t&&t.uuid)?r.default.put(`${i}/api/reports/${e}/public-reject`,{...t,isPublic:!0}).then(e=>(console.log("Reject API response:",e.data),e)).catch(e=>{throw console.error("Reject API Error:",{message:e.message,status:e.response?.status,data:e.response?.data}),e}):n.put(`/api/reports/${e}/reject`,t),sendNotification:(e,t)=>(console.log(`🔴 REPORT NOTIFY API CALL: ID=${e}, UUID=${t.reportUuid||"N/A"}`),console.log("Notification payload:",{recipientEmail:t.recipientEmail,subject:t.subject,status:t.status}),t&&t.reportUuid)?r.default.post(`${i}/api/reports/${e}/public-notify`,{...t,isPublic:!0}).then(e=>(console.log("Notification API response:",e.data),e)).catch(e=>{throw console.error("Notification API Error:",{message:e.message,status:e.response?.status,data:e.response?.data}),e}):n.post(`/api/reports/${e}/notify`,t)},photos:{getAll:()=>n.get("/api/photos"),getById:e=>n.get(`/api/photos/${e}`),getByReport:e=>(console.log(`Getting photos for report ${e} using ${i}`),r.default.get(`${i}/api/photos/public-report/${e}`,{headers:{"Content-Type":"application/json",Accept:"application/json"}}).catch(t=>(console.warn(`Public photos endpoint failed, trying alternative endpoint: ${t.message||t}`),r.default.get(`${i}/api/photos/report/${e}`,{headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`Bearer ${localStorage.getItem("token")||""}`}}).catch(t=>(console.error(`All photo endpoints failed for report ${e}:`,t.message||t),{data:[]}))))),getByRoom:(e,t)=>(console.log(`Getting photos for room ${t} in property ${e}`),n.get(`/api/photos/room/${e}/${t}`).then(e=>(console.log(`Photos API response for room ${t}:`,e.data?{count:e.data.length,firstPhoto:e.data.length>0?{id:e.data[0].id,path:e.data[0].path,url:e.data[0].url}:null}:"No data"),e)).catch(e=>{throw console.error(`Error getting photos for room ${t}:`,e.message),e})),getByProperty:e=>(console.log(`Getting all photos for property ${e}`),n.get(`/api/photos/property/${e}`)),associateWithReport:(e,t,a)=>(console.log(`Associating photo ${e} with report ${t}`),n.post(`/api/photos/${e}/associate/${t}`,a)),upload:(e,t)=>n.post(`/api/photos/upload/${e}`,t,{headers:{"Content-Type":"multipart/form-data"}}),uploadForRoom:(e,t,a)=>n.post(`/api/photos/upload-room/${e}/${t}`,a,{headers:{"Content-Type":"multipart/form-data"}}),updateNote:(e,t)=>n.put(`/api/photos/${e}/note`,{note:t}),addTag:(e,t)=>n.post(`/api/photos/${e}/tags`,{tag:t}),removeTag:(e,t)=>n.delete(`/api/photos/${e}/tags/${t}`),delete:e=>n.delete(`/api/photos/${e}`)},user:{getProfile:()=>n.get("/api/users/profile"),updateProfile:e=>n.put("/api/users/profile",e),changePassword:e=>n.put("/api/users/password",e)},auth:{login:e=>n.post("/api/auth/login",e),register:e=>n.post("/api/auth/register",e),verifyEmail:e=>n.post("/api/auth/verify-email",e),resendVerificationCode:e=>p.post("/api/auth/resend-verification-code",e),getUser:()=>n.get("/api/auth/user"),checkToken:()=>n.get("/api/auth/token-check"),checkEmail:e=>p.post("/api/auth/check-email",e),requestPasswordReset:e=>p.post("/api/auth/request-password-reset",e),verifyResetCode:e=>p.post("/api/auth/verify-reset-code",e),resetPassword:e=>p.post("/api/auth/reset-password",e)},cart:{getProducts:()=>n.get("/api/products"),getProductById:e=>n.get(`/api/products/${e}`),getCart:()=>n.get("/api/cart"),addToCart:(e,t=1)=>n.post("/api/cart/items",{product_id:e,quantity:t}),updateQuantity:(e,t)=>n.put(`/api/cart/items/${e}`,{quantity:t}),removeFromCart:e=>n.delete(`/api/cart/items/${e}`),clearCart:()=>n.delete("/api/cart"),checkout:e=>n.post("/api/cart/checkout",e),getOrderHistory:()=>n.get("/api/orders"),getOrderById:e=>n.get(`/api/orders/${e}`)}},u=n;o()}catch(e){o(e)}})},330:(e,t,a)=>{"use strict";a.a(e,async(e,o)=>{try{a.d(t,{H:()=>c,a:()=>d});var r=a(997),s=a(6689),i=a(1163),n=a(2880),p=a(7751),l=e([n,p]);[n,p]=l.then?(await l)():l;let u=(0,s.createContext)({user:null,loading:!0,login:async()=>{},register:async()=>{},verifyEmail:async()=>{},resendVerificationCode:async()=>{},logout:()=>{},checkAuth:()=>{}});function c({children:e}){let[t,a]=(0,s.useState)(null),[o,l]=(0,s.useState)(!0),[c,d]=(0,s.useState)(!1),g=(0,i.useRouter)(),m=async(e,t)=>{try{l(!0);let o=await p.E.auth.login({email:e,password:t});if(o.data.tempToken&&o.data.user.needsVerification){localStorage.setItem("tempToken",o.data.tempToken);let e=(0,n.jwtDecode)(o.data.tempToken);return a(e.user),d(!0),l(!1),{success:!1,needsVerification:!0,userId:e.user.id,message:o.data.message}}if(o.data.token){localStorage.setItem("token",o.data.token),p.Z.defaults.headers.common.Authorization=`Bearer ${o.data.token}`;let e=(0,n.jwtDecode)(o.data.token);return a(e.user),d(!1),l(!1),{success:!0}}}catch(e){return console.error("Login error:",e),l(!1),{success:!1,message:e.response?.data?.message||"Giriş yapılırken bir hata oluştu"}}},h=async(e,t,o)=>{try{l(!0);let r=await p.E.auth.register({name:e,email:t,password:o});if(r.data.tempToken&&r.data.user.needsVerification){localStorage.setItem("tempToken",r.data.tempToken);let e=(0,n.jwtDecode)(r.data.tempToken);return a(e.user),d(!0),l(!1),{success:!1,needsVerification:!0,userId:e.user.id,message:r.data.message}}if(r.data.token){localStorage.setItem("token",r.data.token),p.Z.defaults.headers.common.Authorization=`Bearer ${r.data.token}`;let e=(0,n.jwtDecode)(r.data.token);return a(e.user),d(!1),l(!1),{success:!0}}}catch(e){return console.error("Register error:",e),l(!1),{success:!1,message:e.response?.data?.message||"Kayıt olurken bir hata oluştu"}}},y=async(e,t)=>{try{l(!0),console.log("Calling API with:",{userId:e,code:t});let o=await p.E.auth.verifyEmail({userId:e,code:t});if(console.log("Verification API response:",o.data),o.data.token){localStorage.removeItem("tempToken"),localStorage.setItem("token",o.data.token),p.Z.defaults.headers.common.Authorization=`Bearer ${o.data.token}`;let e=(0,n.jwtDecode)(o.data.token);return a(e.user),d(!1),l(!1),{success:!0,message:o.data.message||"Email verified successfully"}}if(o.data)return{success:!!o.data.success,message:o.data.message||"Unknown response"};return{success:!1,message:"Invalid response from server"}}catch(e){return console.error("Email verification error:",e),l(!1),{success:!1,message:e.response?.data?.message||"Doğrulama yapılırken bir hata oluştu"}}},f=async e=>{try{l(!0);let t=await p.E.auth.resendVerificationCode({userId:e});if(l(!1),t.data.success)return{success:!0,message:t.data.message};return{success:!1,message:t.data.message||"Failed to resend verification code"}}catch(e){return console.error("Resend verification code error:",e),l(!1),{success:!1,message:e.response?.data?.message||"Failed to resend verification code"}}};return r.jsx(u.Provider,{value:{user:t,loading:o,pendingVerification:c,login:m,register:h,verifyEmail:y,resendVerificationCode:f,logout:()=>{a(null),d(!1),g.push("/login")},checkAuth:()=>(l(!1),!1)},children:e})}function d(){return(0,s.useContext)(u)}o()}catch(e){o(e)}})},8603:(e,t,a)=>{"use strict";a.d(t,{Z:()=>l,j:()=>c});var o=a(997),r=a(6689);let s={items:[],total:0,itemCount:0},i={ADD_ITEM:"ADD_ITEM",REMOVE_ITEM:"REMOVE_ITEM",UPDATE_QUANTITY:"UPDATE_QUANTITY",CLEAR_CART:"CLEAR_CART"};function n(e,t){switch(t.type){case i.ADD_ITEM:{let a;let o=e.items.findIndex(e=>e.id===t.payload.id),r=(a=o>=0?e.items.map((e,a)=>a===o?{...e,quantity:e.quantity+(t.payload.quantity||1)}:e):[...e.items,{...t.payload,quantity:t.payload.quantity||1}]).reduce((e,t)=>e+t.price*t.quantity,0),s=a.reduce((e,t)=>e+t.quantity,0);return{...e,items:a,total:r,itemCount:s}}case i.REMOVE_ITEM:{let a=e.items.filter(e=>e.id!==t.payload.id),o=a.reduce((e,t)=>e+t.price*t.quantity,0),r=a.reduce((e,t)=>e+t.quantity,0);return{...e,items:a,total:o,itemCount:r}}case i.UPDATE_QUANTITY:{let a=e.items.map(e=>e.id===t.payload.id?{...e,quantity:t.payload.quantity}:e),o=a.reduce((e,t)=>e+t.price*t.quantity,0),r=a.reduce((e,t)=>e+t.quantity,0);return{...e,items:a,total:o,itemCount:r}}case i.CLEAR_CART:return s;default:return e}}let p=(0,r.createContext)();function l({children:e}){let[t,a]=(0,r.useReducer)(n,s,()=>s);return o.jsx(p.Provider,{value:{cart:t,addItem:e=>{a({type:i.ADD_ITEM,payload:e})},removeItem:e=>{a({type:i.REMOVE_ITEM,payload:{id:e}})},updateQuantity:(e,t)=>{a({type:i.UPDATE_QUANTITY,payload:{id:e,quantity:t}})},clearCart:()=>{a({type:i.CLEAR_CART})}},children:e})}function c(){let e=(0,r.useContext)(p);if(void 0===e)throw Error("useCart must be used within a CartProvider");return e}},3414:(e,t,a)=>{"use strict";a.a(e,async(e,o)=>{try{a.r(t),a.d(t,{default:()=>d});var r=a(997);a(6689);var s=a(3590),i=a(968),n=a.n(i);a(6764),a(2878),a(8819);var p=a(330),l=a(8603),c=e([s,p]);[s,p]=c.then?(await c)():c;let d=function({Component:e,pageProps:t}){return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n(),{children:[r.jsx("meta",{charSet:"utf-8"}),r.jsx("meta",{httpEquiv:"X-UA-Compatible",content:"IE=edge"}),r.jsx("meta",{name:"viewport",content:"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0"}),r.jsx("meta",{name:"description",content:"DepositShield - Property reporting and documentation application"}),r.jsx("meta",{name:"theme-color",content:"#4F46E5"}),r.jsx("link",{rel:"manifest",href:"/manifest.json"}),r.jsx("link",{rel:"icon",href:"/favicon.ico"}),r.jsx("link",{rel:"apple-touch-icon",href:"/icons/apple-touch-icon.png"}),r.jsx("link",{rel:"preconnect",href:"https://fonts.googleapis.com"}),r.jsx("link",{rel:"preconnect",href:"https://fonts.gstatic.com",crossOrigin:"anonymous"}),r.jsx("link",{href:"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap",rel:"stylesheet"}),r.jsx("title",{children:"DepositShield"})]}),r.jsx(p.H,{children:(0,r.jsxs)(l.Z,{children:[r.jsx(e,{...t}),r.jsx(s.ToastContainer,{position:"top-right",autoClose:3e3,hideProgressBar:!1,newestOnTop:!1,closeOnClick:!0,rtl:!1,pauseOnFocusLoss:!0,draggable:!0,pauseOnHover:!0,theme:"colored"})]})})]})};o()}catch(e){o(e)}})},6764:()=>{},2878:()=>{}};